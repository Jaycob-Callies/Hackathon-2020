<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>